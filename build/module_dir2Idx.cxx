/*
 * Generated by Bluespec Compiler, version 2023.07-27-gf00d2058 (build f00d2058)
 * 
 * On Tue Mar 26 17:40:43 EDT 2024
 * 
 */
#include "bluesim_primitives.h"
#include "module_dir2Idx.h"


/* Constructor */
MOD_module_dir2Idx::MOD_module_dir2Idx(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent)
{
  symbol_count = 0u;
  init_symbols_0();
}


/* Symbol init fns */

void MOD_module_dir2Idx::init_symbols_0()
{
}


/* Rule actions */


/* Methods */

tUInt8 MOD_module_dir2Idx::METH_dir2Idx(tUInt8 ARG_dir2Idx_dirn)
{
  tUInt8 PORT_dir2Idx;
  switch (ARG_dir2Idx_dirn) {
  case (tUInt8)1u:
    PORT_dir2Idx = (tUInt8)0u;
    break;
  case (tUInt8)2u:
    PORT_dir2Idx = (tUInt8)1u;
    break;
  case (tUInt8)4u:
    PORT_dir2Idx = (tUInt8)2u;
    break;
  case (tUInt8)8u:
    PORT_dir2Idx = (tUInt8)3u;
    break;
  case (tUInt8)16u:
    PORT_dir2Idx = (tUInt8)4u;
    break;
  default:
    PORT_dir2Idx = (tUInt8)7u;
  }
  return PORT_dir2Idx;
}

tUInt8 MOD_module_dir2Idx::METH_RDY_dir2Idx()
{
  tUInt8 PORT_RDY_dir2Idx;
  tUInt8 DEF_CAN_FIRE_dir2Idx;
  DEF_CAN_FIRE_dir2Idx = (tUInt8)1u;
  PORT_RDY_dir2Idx = DEF_CAN_FIRE_dir2Idx;
  return PORT_RDY_dir2Idx;
}


/* Reset routines */


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */


/* State dumping routine */
void MOD_module_dir2Idx::dump_state(unsigned int indent)
{
}


/* VCD dumping routines */

unsigned int MOD_module_dir2Idx::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 0u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_module_dir2Idx::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_module_dir2Idx &backing)
{
}
